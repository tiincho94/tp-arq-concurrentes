akka {
  actor {
    provider = cluster
    warn-about-java-serializer-usage = false
    allow-java-serialization = true
    serialization-bindings {
      "iasc.g4.CborSerializable" = jackson-cbor
    }
  }
  remote {
    artery {
      canonical.hostname = "127.0.0.1"
      canonical.port = 0
    }
  }
  cluster {
    seed-nodes = [
      "akka://TP@127.0.0.1:25251",
      "akka://TP@127.0.0.1:25252"]
    downing-provider-class = "com.swissborg.lithium.DowningProviderImpl"
  }
  server {
        port = 8081,
        routes {
          ask-timeout = 65s
        }
      }
}

com.swissborg.lithium {

}

com.swissborg.lithium {
  # The name of the strategy to use for split-brain resolution.
  # Available: static-quorum, keep-majority, keep-referee, keep-oldest.
  active-strategy = "static-quorum"
  static-quorum {
    # Minimum number of nodes in the surviving partition.
    quorum-size = 1

    # Only take in account nodes with this role.
    role = "administrator"
  }
  # Duration during which the cluster must be stable before taking
  # action on the network-partition. The duration must chose large
  # enough to allow for membership events to be gossiped and persistent
  # actor to be migrated.
  stable-after = 30s

  # Down the partition if it has been unstable for too long. If the cluster
  # wait too long before downing itself persistent actors might already be
  # restarted on another partition, leading to two instances of the same
  # persistent actor.
  # It is by default derived from 'stable-after' to be 'stable-after' + 3/4 'stable-after'.
  # If overriden, it must be less than 2 * 'stable-after'. To disable the downing, set
  # it to 'off', however this is not recommended.
  #down-all-when-unstable = on
}